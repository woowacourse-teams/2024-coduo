package site.coduo.todo.mock;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

import site.coduo.pairroom.domain.PairRoom;
import site.coduo.todo.domain.Todo;
import site.coduo.todo.service.port.TodoRepository;

public class FakeTodoRepository implements TodoRepository {

    private Long autoGeneratedId = 0L;
    public final List<Todo> data = new ArrayList<>();

    @Override
    public Todo save(final Todo todo) {
        if (todo.getId() == null || todo.getId() == 0) {
            final Todo createdTodo = new Todo(
                    ++autoGeneratedId,
                    todo.getPairRoom(),
                    todo.getContent().getContent(),
                    todo.getSort().getSort()
            );
            data.add(createdTodo);
            return createdTodo;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), todo.getId()));
            data.add(todo);
            return todo;
        }
    }

    @Override
    public Optional<Todo> findTopByPairRoomOrderBySortDesc(final PairRoom pairRoom) {
        return data.stream()
                .max(Comparator.comparingInt(todo -> todo.getSort().getSort()));
    }

    @Override
    public Optional<Todo> findById(final Long id) {
        return data.stream()
                .filter(item -> Objects.equals(item.getId(), id)).findFirst();
    }
}
